import logging
import os
from pathlib import Path
from config.getconfig import get_config

import mistune
from md2cf.confluence_renderer import ConfluenceRenderer


CONFIG = get_config()
confluence_url = str(CONFIG["confluence_url"])
confluence_space_id = str(CONFIG["confluence_space"])
md_files_path = str(CONFIG["github_folder_with_md_files"])
confluence_parent_page_id = str(CONFIG["confluence_parent_page_id"])
git_repo_name = str(CONFIG["git_repo_name"])


renderer = ConfluenceRenderer(use_xhtml=True)
confluence_mistune = mistune.Markdown(renderer=renderer)

default_content = "<p style=\"background-color:#e7be17;\">This page is autogenerated. Make changes in the GitHub repository: " + \
                                                    "<b><a href=\"https://github.com/beautifulworld17/github-md-to-confluence-publisher\">github-md-to-confluence-publisher</a></b></p>"

# page with DISPLAY CHILDREN macro
macro_content="<ac:structured-macro ac:name=\"children\" ac:schema-version=\"2\" ac:macro-id=\"80b8c33e-cc87-4987-8f88-dd36ee991b15\"/>"


def publish_parent_page(confluence, page_title):
    '''
    create page with the DISPLAY CHILDREN macro for the directories in the folder with MD files
    '''
    response_data = confluence.create_page(space=confluence_space_id, title=page_title, 
                                           body=default_content + macro_content, 
                                           parent_id=confluence_parent_page_id, type='page', 
                                           full_width=False, editor='v2')
    return response_data["id"]


def publish_page(filepath, confluence, parent_page_id = None, repo_name=''):
    '''
    create new page
    '''
    filename = str(filepath).lstrip("./")
    with open(filepath, 'r', encoding="utf-8") as mdFile:
        file_content = mdFile.read()
    logging.info("Creating page for the file: "+ filename)

    confluence.create_page(space=confluence_space_id, title=repo_name+filename, 
                                   body=default_content + confluence_mistune(file_content), 
                                   parent_id=parent_page_id, 
                                   type='page', full_width=True, editor='v2')


def publish_folder(folder, confluence):
    '''
    Publish directories as confluence pages
    '''
    for entry in os.scandir(folder):
        entry_path = str(entry.path)
        if entry.is_dir():
            md_paths = []
            for path in Path(entry).rglob('*.md'):
                md_paths.append(str(path))

            if not md_paths: # skip if directory doesn't have any *.md files
                continue

            logging.info("Creating page for directory: " + entry_path)
            new_page_id = publish_parent_page(confluence=confluence, page_title=str(entry.name))

            # create pages under the directory
            for path in md_paths:
                publish_page(filepath=path, confluence=confluence, parent_page_id=new_page_id)
            
        elif entry.is_file():
            if entry_path.lower().endswith('.md'): # check for correct file extension
                logging.info("Found file in the root: " + str(entry.path).lstrip("./"))
                publish_page(filepath=entry_path, confluence=confluence, 
                             parent_page_id=confluence_parent_page_id, repo_name=git_repo_name)

        elif entry.is_symlink():
            logging.info("Found symlink: " + entry_path)

        else:
            logging.info("Found unknown type of entry (not file, not directory, not symlink) " + str(entry.path))


def update_pages(modified_page, confluence, repo_name=''):
    '''
    Updates the content of the page
    '''

    page_id = confluence.get_page_id(confluence_space_id, repo_name + modified_page)

    file_path = md_files_path + modified_page
    with open(file_path, 'r', encoding="utf-8") as mdFile:
        file_content = mdFile.read()

    confluence.update_page(page_id, repo_name+modified_page, default_content + confluence_mistune(file_content), 
                            type='page', representation='storage', minor_edit=False, full_width=False)